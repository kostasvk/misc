<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wgARCAHzAfIDAREAAhEBAxEB/8QA
        HAABAQEBAAMBAQAAAAAAAAAAAAgHBgMEBQEC/8QAFAEBAAAAAAAAAAAAAAAAAAAAAP/aAAwDAQACEAMQ
        AAABqkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAHiJ/MjPYB/B05RZ1QAAAAAAAAAAAAAAAAAAAAAAAAAAOfI0N4NmAByJLhuhtQAAAAAAAAAAAAA
        AAAAAAAAAAAAPUIaLEPvgAAEhG6mqgAAAAAAAAAAAAAAAAAAAAAAAAE1HbGpAAAA8REpdgAAAAAAAAAA
        AAAAAAAAAAAAAABEZZ4AAAAJrNhNAAAAAAAAAAAAAAAAAAAAAAAAABExZgAAAAMoPkm9AAAAAAAAAAAA
        AAAAAAAAAAAAAiYswAAAAGPH4beAAAAAAAAAAAAAAAAAAAAAAAACJCyTygAAAEolInVAAAAAAAAAAAAA
        AAAAAAAAAAAAxU5coUAAAHxSRi4AAAAAAAAAAAAAAAAAAAAAAAAAARebiakAAD55GpXp1QAAAAAAAAAA
        AAAAAAAAAAAAAAAPESUeoUedSD55jxiRXZ2AAAAAAAAAAAAAAAAAAAAAAAAAAABwphRzJ+HuGwGynlAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        xSkpnaFcOjc4JsgRaiczX6YHGVNUqwBETbAY3HFnVeGSTkgSHoa5gv6AhP8A1EkpgWPL9nClojtR/awC
        8xowOgbkCTUw3Ia4fUMDYYGdpH7SQC6zYQdCmUyyPMVa8vKpJtxlQBJzAq4y5kWDMmiFSeVWE0pDSQW0
        a5GMU0NYRBLleUVHHZmJbK7Uf0EAHwOslhWE6RjqTAhx6CytaEVS0RSgeUa0evG4dhIyevGoto5y+QNi
        mOz8KBggliFDkTXJ7lo2WsAoGTmLJHyZvkgUdojFDHXeL+KoJLM6m6qA9sb0hO8k6DNo1MX5PS9pBcq5
        BLm3fxkaOUv0YYE9Lvj2lRJ9GCRHa78mPfY6FaWGkVTZXxueLSQD8b8qOBjAjZCimfwk8mFvp4zSKmBD
        Eagh4AYIJYkCZE38WYdykGQrgEoqkvXrVcKyS/RY6rydr+X6TMDAnbgcQQ6FvZBLNLCDCaPgEYG3SgDt
        QXV2hzHSHLKjyWJGnJHyqY9JNIyBE5hUQ9XOKLVZQt1wCxbC6j95oTJ4f6rQFqgccyN+DUsTcPuJseGQ
        fuFyWPwTKAljyr5iiliFDkTXMgq2IakggC0g24+vBgy06lVDbmum0uJxbnGLx+sySIzBbIuBr1yiDIwl
        InbRMoSX1NmRQuGTMUG9EQ8VkZXF3QCgwABnar5exAIJUBOUCIgjGeFRohazETLpGnNW7wjsNMqUFxiL
        64DTSZkVlQzbjT/Oa+DyMzCJPpgdyeYooYgAYA1/KD//2gAMAwEAAgADAAAAEJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJBJAIJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJIAAAIJJJJJJJJJJJJJJJJJJJJJJJJJJIIAAAJJJJJJJJJJJJJJJJJJJJJJJJJJJIAAA
        AJJJJJJJJJJJJJJJJJJJJJJJJJJAAAAAAJJJJJJJJJJJJJJJJJJJJJJJJJIAAAAAAJJJJJJJJJJJJJJJ
        JJJJJJJJJJIAAAAABJJJJJJJJJJJJJJJJJJJJJJJJIAAAAAIJJJJJJJJJJJJJJJJJJJJJJJJJBAAAAJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJAAAIBJJJJJJJJJJJJJJJJJJJJJJJJJIAABIJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJAAIBJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ//xAAUEQEAAAAAAAAAAAAAAAAAAACw/9oA
        CAEDAQE/EHgf/8QAFBEBAAAAAAAAAAAAAAAAAAAAsP/aAAgBAgEBPxB4H//EACQQAQEBAAIBAwQDAQAA
        AAAAAAERIQAxUDBBYRAgUaFxoLGB/9oACAEBAAE/EP7ISP1ZrlYAFUgArxPRvN2BYMADnwVNO0gzYpSg
        YagS+WQBRBgIpWBF4qS5w84tRPcbAThC7lAn0EUoHQsPfE5wEo/4OAXZ5bD+hRMVtNyFABAjYpp2hsiC
        WzDHge3zd0PcVpHCF2fagFmLwO+Qe6hi5STA0TDMNGGQRz0mkZNQgdzRRHyq9qqRDwrBGBWYLwDYC0VL
        GhBa8IugaKiYBYZFYAABH3tybAIhSIAFjE8Xb+cC3TLqjCJ9eTz++fH7AaJeFHj/ALsRNQkexaz0T5md
        rhZEEURFHiya195KFFYJ4XlE+t3Y8eCiKEKH04+Q5dg+Lq0SuOuP9FDbWH4r8qK+SS6muZpV0E0CsV9J
        dTvUvRK0VGDpCjseq1gsaKhT2l8kmOy+eQsCtGoFT0lnk4DW0iQqC0JFRz4kATAgKUFKbVDyQp1BYCt4
        Slkc0eZna5WRAQMRE9LqDIo+QqgsD3Q4/RTjUo1GgswDyfw0RK9AMthM9XMIuNESfZagwkJ6IWwk2QhC
        LqAhAU3MMfR3EGJnbI8oISUKPir3+FJq4yRTGVpupY6xf3o6lDroAABUAJACoPsOWDyWAjkEk557yXlR
        BP8ABJA6XyiP1ZrhZEEUIijyOqiNQIMCIJFvjFqv7uD1OqC05+vCKR7DUaI0P1JdZhMAIUrVifZ5GPQJ
        CbWCHOWVeKWVTgR4GJC2EBhqM3DAlQGFU8wxrIyAIjBIeQEIexoooJKgJH2J4p9xihlMWiGMaRPome90
        QAHVGDYCupWpiHfvYkiuNBOAP1ZrhYAAAAAB/aD/AP/Z
</value>
  </data>
</root>